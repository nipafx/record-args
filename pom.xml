<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>dev.nipafx.args</groupId>
	<artifactId>record-args</artifactId>
	<version>${revision}</version>

	<name>RecordArgs</name>
	<description>A simple command-line argument parser for Java applications that relies on records and sealed interfaces.</description>
	<inceptionYear>2022</inceptionYear>
	<url>https://nipafx.dev/record-args</url>

	<licenses>
		<license>
			<name>The Apache License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Nicolai Parlog</name>
			<email>nicolai@nipafx.dev</email>
			<url>https://nipafx.dev</url>
			<id>nipafx</id>
		</developer>
	</developers>

	<scm>
		<url>https://github.com/nipafx/record-args</url>
		<connection>scm:git:git://github.com/nipafx/record-args.git</connection>
	</scm>

	<properties>
		<maven.compiler.release>21</maven.compiler.release>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- the revision needs to be a value that works for `––module-version`,
		     which, e.g., SNAPSHOT or ${sha1} don't -->
		<revision>0</revision>
		<!-- Maven should deploy files to this directory, so JReleaser can pick them up here -->
		<stagingRepository>target/staging-deploy</stagingRepository>
		<altDeploymentRepository>local::file:./${stagingRepository}</altDeploymentRepository>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>5.10.2</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.25.3</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>flatten-maven-plugin</artifactId>
					<version>1.6.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.13.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.2.5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.3.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>3.6.3</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.3.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>3.1.1</version>
				</plugin>
				<plugin>
					<groupId>org.jreleaser</groupId>
					<artifactId>jreleaser-maven-plugin</artifactId>
					<version>1.11.0</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<configuration>
					<flattenMode>resolveCiFriendliesOnly</flattenMode>
				</configuration>
				<executions>
					<execution>
						<id>flatten.clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>
						--add-opens=dev.nipafx.args/dev.nipafx.args=ALL-UNNAMED
					</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<doclint>all</doclint>
							<failOnWarnings>true</failOnWarnings>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jreleaser</groupId>
				<artifactId>jreleaser-maven-plugin</artifactId>
				<configuration>
					<jreleaser>
						<files>
							<active>ALWAYS</active>
							<globs>
								<glob>
									<pattern>target/record-args-*.jar</pattern>
								</glob>
							</globs>
						</files>
						<signing>
							<active>ALWAYS</active>
							<armored>true</armored>
						</signing>
						<deploy>
							<maven>
								<nexus2>
									<maven-central>
										<active>ALWAYS</active>
										<stagingRepositories>${stagingRepository}</stagingRepositories>
										<url>https://s01.oss.sonatype.org/service/local</url>
										<closeRepository>true</closeRepository>
										<releaseRepository>true</releaseRepository>
									</maven-central>
								</nexus2>
							</maven>
						</deploy>
						<release>
							<github>
								<overwrite>true</overwrite>
							</github>
						</release>
					</jreleaser>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>flatten-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>flatten</id>
								<phase>process-resources</phase>
								<goals>
									<goal>flatten</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.jreleaser</groupId>
						<artifactId>jreleaser-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>deploy</phase>
								<goals>
									<goal>release</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
